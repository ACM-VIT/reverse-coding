{
  "_from": "connected-react-router",
  "_id": "connected-react-router@4.2.3",
  "_inBundle": false,
  "_integrity": "sha1-cGan+D2khN36nDU5A6awfRnL6eE=",
  "_location": "/connected-react-router",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "connected-react-router",
    "fetchSpec": "latest",
    "name": "connected-react-router",
    "raw": "connected-react-router",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/connected-react-router/-/connected-react-router-4.2.3.tgz",
  "_shasum": "7066a7f83da484ddfa9c353903a6b07d19cbe9e1",
  "_shrinkwrap": null,
  "_spec": "connected-react-router",
  "_where": "/home/saurav/1projects/react-app",
  "author": {
    "name": "Supasate Choochaisri"
  },
  "bugs": {
    "url": "https://github.com/supasate/connected-react-router/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "immutable": "^3.8.1",
    "react-router": "^4.1.0"
  },
  "deprecated": false,
  "description": "A Redux binding for React Router v4",
  "devDependencies": {
    "@types/history": "^4.5.0",
    "@types/react": "^15.0.23",
    "babel-cli": "^6.18.0",
    "babel-core": "^6.20.0",
    "babel-eslint": "^7.1.1",
    "babel-jest": "^17.0.2",
    "babel-loader": "^6.3.1",
    "babel-plugin-rewire": "^1.0.0",
    "babel-preset-es2015": "^6.18.0",
    "babel-preset-react": "^6.16.0",
    "babel-preset-stage-1": "^6.16.0",
    "babel-template": "^6.2.0",
    "babel-types": "^6.2.0",
    "enzyme": "^2.8.1",
    "eslint": "^3.12.0",
    "eslint-plugin-import": "^2.2.0",
    "eslint-plugin-react": "^6.8.0",
    "jest": "^17.0.2",
    "prop-types": "^15.5.8",
    "react": "^15.5.4",
    "react-dom": "^15.5.4",
    "react-redux": "^4.4.8",
    "react-test-renderer": "^15.5.4",
    "redux": "^3.6.0",
    "redux-devtools": "^3.3.2",
    "redux-immutable": "^3.0.11",
    "redux-mock-store": "^1.2.1",
    "rewire": "^2.5.2",
    "webpack": "^2.2.1"
  },
  "files": [
    "*.js",
    "*.md",
    "*.ts",
    "lib",
    "umd"
  ],
  "homepage": "https://github.com/supasate/connected-react-router#readme",
  "license": "MIT",
  "main": "lib/index.js",
  "name": "connected-react-router",
  "optionalDependencies": {},
  "peerDependencies": {
    "react": "^15.5.4",
    "react-redux": "^4.4.8 || ^5.0.4",
    "redux": "^3.6.0"
  },
  "readme": "Connected React Router [![Build Status](https://travis-ci.org/supasate/connected-react-router.svg?branch=master)](https://travis-ci.org/supasate/connected-react-router)\n======================\nA Redux binding for React Router v4\n\nMain features\n-------------\n:sparkles: Synchronize router state with redux store with uni-directional flow (history -> store -> router -> components).\n\n:gift: Support [React Router v4](https://github.com/ReactTraining/react-router/tree/v4).\n\n:sunny: Support functional component hot reloading while preserving state (with [react-hot-reload v3](https://github.com/gaearon/react-hot-loader/tree/next)).\n\n:tada: Dispatching history methods (`push`, `replace`, `go`, `goBack`, `goForward`) work for both [redux-thunk](https://github.com/gaearon/redux-thunk) and [redux-saga](https://github.com/yelouafi/redux-saga).\n\n:snowman: Nested children can access routing state such as current location directly with `react-redux`'s `connect`.\n\n:clock9: Support time traveling in Redux DevTools.\n\n:gem: Support [Immutable.js](https://facebook.github.io/immutable-js/)\n\n:muscle: Support TypeScript\n\n\nInstallation\n-----------\nUsing [npm](https://www.npmjs.com/):\n\n    $ npm install --save connected-react-router\n\nOr [yarn](https://yarnpkg.com/):\n\n    $ yarn add connected-react-router\n\nUsage\n-----\n### Step 1\n\n- Create a `history` object.\n- Wrap the root reducer with `connectRouter` and supply the `history` object to get a new root reducer.\n- Use `routerMiddleware(history)` if you want to dispatch history actions (ex. to change URL with `push('/path/to/somewhere')`).\n\n\n```js\n...\nimport { createBrowserHistory } from 'history'\nimport { applyMiddleware, compose, createStore } from 'redux'\nimport { connectRouter, routerMiddleware } from 'connected-react-router'\n...\nconst history = createBrowserHistory()\n\nconst store = createStore(\n  connectRouter(history)(rootReducer), // new root reducer with router state\n  initialState,\n  compose(\n    applyMiddleware(\n      routerMiddleware(history), // for dispatching history actions\n      // ... other middlewares ...\n    ),\n  ),\n)\n```\n\n### Step 2\n\n\n- Wrap your react-router v4 routing with `ConnectedRouter` and pass `history` object as a prop.\n- Place `ConnectedRouter` as children of `react-redux`'s `Provider`.\n\n```js\n...\nimport { Provider } from 'react-redux'\nimport { Route, Switch } from 'react-router' // react-router v4\nimport { ConnectedRouter } from 'connected-react-router'\n...\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}> { /* place ConnectedRouter under Provider */ }\n      <div> { /* your usual react-router v4 routing */ }\n        <Switch>\n          <Route exact path=\"/\" render={() => (<div>Match</div>)} />\n          <Route render={() => (<div>Miss</div>)} />\n        </Switch>\n      </div>\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById('react-root')\n)\n```\nNow, it's ready to work!\n\n\nExamples\n--------\nSee [examples](https://github.com/supasate/connected-react-router/tree/master/examples) folder\n\n[FAQ](https://github.com/supasate/connected-react-router/tree/master/FAQ.md)\n-----\n- [How to navigate with Redux action](https://github.com/supasate/connected-react-router/tree/master/FAQ.md#how-to-navigate-with-redux-action)\n- [How to get current browser location (URL)](https://github.com/supasate/connected-react-router/tree/master/FAQ.md#how-to-get-current-browser-location-url)\n- [How to set Router props e.g. basename, initialEntries, etc.](https://github.com/supasate/connected-react-router/tree/master/FAQ.md#how-to-set-router-props-eg-basename-initialentries-etc)\n- [How to hot reload functional components](https://github.com/supasate/connected-react-router/tree/master/FAQ.md#how-to-hot-reload-functional-components)\n- [How to hot reload reducers](https://github.com/supasate/connected-react-router/tree/master/FAQ.md#how-to-hot-reload-reducers)\n- [How to support Immutable.js](https://github.com/supasate/connected-react-router/tree/master/FAQ.md#how-to-support-immutablejs)\n\nBuild\n-----\n```bash\nnpm run build\n```\nGenerated files will be in `lib` folder.\n\nContributors\n------------\nSee [Contributors](https://github.com/supasate/connected-react-router/graphs/contributors) and [Acknowledge](https://github.com/supasate/connected-react-router/blob/master/ACKNOWLEDGE.md).\n\nLicense\n-------\n[MIT License](https://github.com/supasate/connected-react-router/blob/master/LICENSE.md)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/supasate/connected-react-router.git"
  },
  "scripts": {
    "build": "npm run build:commonjs & npm run build:umd & npm run build:umd:min",
    "build:commonjs": "BABEL_ENV=commonjs babel src --out-dir lib",
    "build:umd": "NODE_ENV=development webpack src/index.js umd/ConnectedReactRouter.js",
    "build:umd:min": "NODE_ENV=production webpack -p src/index.js umd/ConnectedReactRouter.min.js",
    "lint": "eslint .",
    "posttest": "npm run lint",
    "test": "jest --config ./.jestrc",
    "test:watch": "npm run test -- --watch"
  },
  "types": "./index.d.ts",
  "version": "4.2.3"
}
